<Application x:Class="Ivanova_UchitDn.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Ivanova_UchitDn"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="VhodPage.xaml">
    <Application.Resources>

     

            <Style x:Key="text" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#A5A5A5" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="FontWeight" Value="Regular" />
                <Setter Property="FontSize" Value="11" />
            </Style>


            <Style TargetType="TextBox">
                <Setter Property="Background" Value="#F5F7F9" />
                <Setter Property="Foreground" Value="#363636" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#F5F7F9" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Padding" Value="14 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 0" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="MinWidth" Value="150" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" />
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <EventSetter Event="KeyDown" Handler="TextBox_KeyDown"/>

            </Style>

            <Style TargetType="ListViewItem">
                <Setter Property="Background" Value="#FFFFFFFF" />
                <Setter Property="BorderBrush" Value="#DAE2EA" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Padding" Value="10" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="border" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="7">
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#FEFEFE" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#9575CD"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#FFE6E6E6" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFBCBCBC" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="Button">
                <Setter Property="Background" Value="#6741D9" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Width" Value="250" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <EventSetter Event="KeyDown" Handler="Button_KeyDown"/>

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#7B5CD6" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>

            </Style>


            <Style x:Key="topButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#6E7783" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Width" Value="30" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="50">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#dcdcdc" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="menuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#D0C0FF" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Margin" Value="15 3" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#7B5CD6" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="menuButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="Margin" Value="20 2 20 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
            </Style>


            <Style x:Key="searchTextbox" TargetType="TextBox">
                <Setter Property="Background" Value="#ffffff" />
                <Setter Property="Foreground" Value="#B0B9C6" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="15 10" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 10" />
                <!--<Setter Property="Effect" >
                <Setter.Value>
                    <DropShadowEffect BlurRadius="2" Opacity="0.1" ShadowDepth="1"/>
                </Setter.Value>
            </Setter>-->

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="#E0E6ED" >
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="addButton" TargetType="Button">
                <Setter Property="Background" Value="#6741D9" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="35" />
                <Setter Property="Width" Value="150" />
                <Setter Property="Margin" Value="0 20 0 0" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="7">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#7B5CD6" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="tabButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#121518" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Height" Value="45" />
                <Setter Property="Width" Value="70" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="0 0 0 1" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="#784FF2" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="filterTextBox" TargetType="TextBox" BasedOn="{StaticResource searchTextbox}">
                <Setter Property="Padding" Value="10 7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border" CornerRadius="7" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#E0E6ED" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="#d9d9d9"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="pagingButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#6C7682" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Margin" Value="1 0" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="10 5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0 0 0 1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#7950F2" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="pagingButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="10" />
            </Style>


            <Style x:Key="gridEditButton" TargetType="Button">
                <Setter Property="Background" Value="#B0B9C6" />
                <Setter Property="BorderBrush" Value="#BCBBBB" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="Width" Value="25" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Padding="5" BorderThickness="1" CornerRadius="5">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#673AB7" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="gridRemoveButton" TargetType="Button" BasedOn="{StaticResource gridEditButton}">
                <Setter Property="Background" Value="#C66C6C" />
                <Setter Property="BorderBrush" Value="#BC4E4E" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#F44336" />
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style x:Key="gridButtonIcon" TargetType="Icon:PackIconMaterial">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Width" Value="12" />
                <Setter Property="Height" Value="12" />
            </Style>


            <!--#region DataGrid Style-->

            <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                                <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#region Check Box Style-->
            <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
            <Style TargetType="CheckBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                <Setter Property="BorderBrush" Value="#DAE2EA"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" CornerRadius="3" Padding="1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Padding" Value="4,-1,0,0"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="#9575CD"/>
                                    <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                    <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>




    </Application.Resources>
</Application>
